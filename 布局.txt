html  超文本标记语言
css   层叠样式表
js    脚本语言
el-col el-col-6 el-col-offset-6
el-col el-col-24 el-col-offset-3 el-col-xs-6 el-col-sm-6 el-col-md-6
el-row is-justify-center el-row--flex
<div class="el-row is-justify-center el-row--flex">
	<div class="el-col el-col-4"></div>
</div>
<div class="grid-content"></div>
http  超文本传输协议
https ssl 加密  的超文本传输协议
.修改input框的光标颜色
input{ caret-color: red;}
如何修改input框的placeholder字体颜色以及大小
input::-webkit-input-placeholder{
  color: #B8B8B8;
  font-size: 0.3rem;
}
word-wrap:break-word; 文字折行
联系
结构表现和行为
html  结构层
css   表现层
js    行为层

编辑器 ide
<!doctype html>  文档头
xhtml h5时代之前的东西

html 标签 标签 计算机就开始知道 你真要开始写html了
head 写在头部的东西页面里不会出现

meta 会告诉浏览器你的页面的一些讯息［seo优化］
charset="utf-8" 中国的都用utf-8编码去解析
title 页面标题
默认是文件名

body 主体
html 分为哪些元素
块状元素         ———————— 以矩形的形式独占一行，并且支持宽高等一些样式
宽度并不是100% ＊＊
行内［内联］元素  _________ 不支持宽高，大小会随着内容而变大
可变元素 
iframe 镜像别的页面
map …

xmp 标签 可以让所有的标签都在页面中显示
块状元素的标签 div／p／h1-h6 ／ul ／li ／ol／body／dl／dd／dt／html／…
table?
内联标签 span/a/b/i/img/br/style/meta/title….

contenteditable=true 编辑属性

盒子模型  —— 一个元素在页面中所占位置大小叫做盒子模型
包含的样式  —— width／height／margin／padding／border／content
css引用
1.外链      3       
2.内嵌      2
3.行内      1
4.import   谁在下面下厉害

选择器
id        1
标签       3
class     2
通配符     4

margin 外边距
四个值 上右下左
三个值 上  左右  下
两个值 上下 左右
一个值 上下左右

padding 内边距
四个值 上右下左
三个值 上  左右  下
两个值 上下 左右
一个值 上下左右

word-wrap:break-word; 文字折行重点
text-align-last:center/right/left;文字的最后一行去排列

position
static    默认的定位 没有定位
relative  相对定位
absolute  绝对定位
fixed     窗口定位 ie6 不兼容
inherit   追随父级的定位

%单位  根据父级去计算
width     width
height    height
margin    width
left      width
top       height

它会根据父级有定位去定位 如果都没有 就追随window［html］
float 浮动布局

overflow hidden 不给高度 自己不给浮动 会随着 内容的浮动撑开

一旦给高度了 就会把多余的剪切了
auto / scroll 把多余的剪切 ， 变成滚动条显示

clear:both

内转块
display: block;
display: inline-block;
float: left;
position: fixed／absolute;
display: table;
font-style: italic 是使用的字体斜体
oblique 是让字体斜体
块转内
display:inline;

css伪类
：hover    触碰
：active   点击
：link     未访问
：visited  访问过 
font-weight:boder;
font-weight:bold;
font-weight:lighter//细一点 控制字体粗细 100-1000
font-weight:100
font-family:
宋体 SimSun
黑体 SimHei
微软雅黑 Microsoft YaHei
微软正黑体 Microsoft JhengHei
新宋体 NSimSun
新细明体 PMingLiU
细明体 MingLiU
标楷体 DFKai-SB
仿宋 FangSong
楷体 KaiTi
仿宋_GB2312 FangSong_GB2312
楷体_GB2312 KaiTi_GB2312
line-height 可以控制行内元素不能控制块状元素 
% 继承父级的高度来控制 数字  不支持负数
js
全局变量 依托于window 环境下的变量
作用域 作用在一个地方下的变量

任何函数都是一个作用域

window 所有的变量都可以省略window
变量：就是一个变化的量

不能数字开头,在js中有意义的单词都不能为变量名
特殊的 top

驼峰命名法
_［下划线］命名法
Object
Array

typeof 是js中判断数据格式的一个方法
typeof 是js中唯一一个不会报错的东西

string 
number
boolean
function
object
undefined

字面量 才可能相等
任何对象都是不想等的

引用机制
地址：内存地址 fX021307788 —— 9999

true == 1; 
false == 0;

0001001000101010

0001
0010
0011

function 也有length length 就是它的参数的综合
形参 形式上的参数
实参 实际的参数

this 
1.谁发生的事件就是谁
2.发生谁的作用域下就是谁

self 当前页面的根节点

alert 警告窗
console log   打印
		 error  错误
		  warn  警告
        info   提示

js跨界
screen.height / screen.width

window.open(页面地址)
可以打开一个新页面
window.close()
可以关闭当前的页面

location.href  页面跳转
location.reload() 刷新页面

history.back() 返回上一级
history.forward() 回到下一级

运算符
= 赋予 
== 等于 只会返回 true 和 false 隐式转换
=== 全等 数据格式都一样

++ 放前面就会 数值先发生变化 放后面就后发生变化

+-*/%
‘1’+’1’ ==’11’;
‘李篡’+’李雪慈’=‘李篡’+’李雪慈’
字符串拼接

js计算不精准 有bug 0.1+0.2
< >  >= <=  只会返回true false

先计算＊／％ 在计算＋－
计算是从左到右的
() 先算小括号里面的 在算外面的

?: 三目 就是if else 缩写
条件？成功的执行的语句：不成功执行的语句
! 非 让他变成非自己的布尔值
!= 不等于 只会返回一个true 和false

|| 或 
条件只要一满足就不往后看了
不满足就会一直往后看

&& 和
条件只要满足就一直往后看
不满足就停止了

无限执行的定时器
clearInterval()
setInterval 可以跟无限的参数 
第一个函数是一个函数
第二个是执行的毫秒
第三个＋  参数

一旦第二个参数给的不正确 在ie8+ 中 会以0毫秒去执行
定时器 就会有误差
0 
定时器还会有特性
js 会把非定时器的都处理掉 最后再走定时器的

screenLeft 浏览器距离最左边的距离
screenTop  浏览器距离最上面的距离
Math.random() 可以出现大于0 小于1
但是理论上可以出现0和1

0-1
*5
0-5


0-1
*2 
0-2
+3
3-5

0-1
0-5
10 - 15

0-1
0-5
5-10

0-5
3-8



超详细弹性盒子布局
flex: 1 1 0%;
1、弹性盒子中的弹性子元素默认是进行一行展示的，从左到右；
 
2、父元素属性：display：flex；—— 是设置父元素成为一个弹性盒子；里边的子元素符合弹性布局；
 
3、给父元素设置direction：rtl；—— 是可以改变弹性布局的，改为从右到左开始，里边的子元素也是从右到左进行排列的；
 
4、flex-direction属性：指定了弹性子元素在父容器中的位置给父级使用
    属性值：row（inherit、initial、unset）：默认排列；
            row-reverse：反转横向排列，子元素从右向左依次排列；和direction：rtl的效果一致；
            column：纵向排列，一个子元素占单独的一行；
            column-reverse：反转纵向排列，子元素默认从下往上排列，最后一个元素在最上边；
 
5、justify-content属性：设置弹性子元素在主轴线上的排列方式 给父级使用
    属性值：flex-start：默认排列；从左向右开始，
            flex-end：子元素反转横向排列，排列顺序从右向左；
            center：子元素全局居中排列
			space-evenly //均分间距
            space-around：子元素水平均匀分布在一行，父元素内部左右两边都有间隔空间；但如果剩余空间为负或者只有一个弹性项，则该值等同于center；
            space-between：子元素平均分布在一行，但父元素内部左右两边都没有间隔空间，最左最右边的子元素都是顶边排列的；如果剩余空间为负或者只有一个弹性项，则该值等同于flex-start；
 
6、align-items属性：设置弹性子元素在纵轴上的排列方式给父级使用
    属性值：flex-start（baseline、stretch）：弹性子元素默认排列；
            flex-end：弹性子元素从下往上依次排列；最后一个元素在最上边排列；
            center：全局弹性子元素在纵轴上居中展示；如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度；
7、flex-wrap属性：指定弹性盒子的子元素换行方式给父级使用
    属性值：nowrap：默认，弹性容器为单行，该情况下弹性子元素可能会溢出容器；
            wrap：弹性容器为多行，该情况下弹性子项溢出的部分会被放置到新行，子项内部会发生断行（适用于父元素中包裹多个子元素的情况，如果父元素中只有一个则还是默认的排列方式，并不会进行断行展示）；
            wrap-reverse：反转wrap排列；原来排列在最后一行的转到第一行进行展示，但是每一行中的子元素是不会进行重新排序展示的；
 
8、align-content属性：修改flex-wrap属性的行为，类似于align-items，但它不是设置 弹性子元素的对齐，而是设置各行的对齐
    属性值： stretch：默认，各行将会伸展以占用剩余的空间；给父级使用
            flex-start：各行向弹性容器的起始位置堆叠；
            flex-end：各行向弹性容器的结束位置堆叠；
            center：各行向弹性盒容器的中间位置堆叠；
            space-between：各行在弹性盒容器中平均分布；
            space-around：各行在弹性盒容器中平均分布，两端保留子元素与子元素之间间距大小的一半；
 
9、弹性子元素属性order：设置弹性容器内弹性子元素的属性
    属性值：用整数来定义排列顺序，数值小的排在前面，可以为负值；
 
10、当父元素设置了弹性布局后，想让子元素水平垂直居中，则可以直接给子元素设置margin：auto即可；
 
11、align-self属性：设置弹性元素自身在侧轴（纵轴）方向上的对齐方式
    属性值：auto：计算值为元素的父元素的align-items值，如果其没有父元素，则计算值为stretch；
            flex-start（baseline）：弹性盒子元素的纵轴起始位置的边界紧靠住该行的起始边界；
            flex-end：弹性盒子元素的纵轴起始位置边界紧靠住该行的侧轴结束边界；
            center：弹性盒子元素在该行的侧轴上居中放置
 
12、flex复合属性：指定弹性子元素如何分配空间特别注意给子元素加
如果缩写为flex：1，则其计算属性值为[ 1 1  auto ] 
如果缩写为flex：auto，则其计算值为[ 1 1  auto ]
如果缩写为flex：none，则其计算值为[ 0 0 auto ]
如果缩写为flex： 0 auto  或者flex：initial，则其计算值为[0  1  auto]，即flex初始值
flex 0 0 200px
/* 均分几份 */
			flex: 1;
row 水平 
row-reverse 水平反转 
column 垂直 
column-reverse 垂直反转
flex-wrap - 换行
				nowrap 不换行 
				wrap 换行(宽度不够自动换行) 
				wrap-reverse 换行并反转

				兼容：华为荣耀6p，解决办法是子元素写个inline-block。。只能是这个。
			不能是block或者inline  - 2017-1-5
flex-shrink (收缩比例)
				此时剩余空间是不足时都将等比例缩小 
				0 表示不参加收缩比例
				若没写该属性，则为1

				计算剩余空间：
					元素总宽度和 - 父级宽度 = 超出的宽度
						假设a,b,c 宽度为 100,200,150，收缩比例为 2:1:1 

					首先是每个项目的wdith值乘以flex-shrink值求积 
						100（元素宽度） * 2（收缩比例为2） = 200 
						200 * 1 = 100 
						150 * 1 = 150 

					然后再求和所有项目的乘积
						200 + 100 + 150 = 450（扩大以后的和） 

					得到求占比之后还要乘以要腾出的空间 
						200（单个元素的扩后的比例） / 450（所有的和） * 超出的宽度 = 最终收缩多少像素

					1 800
					2 200
					3 60 
					4 60
					5 60 
					-> 1180 - 1000 = 180
					1 800 * 2  1600
					2 200 * 1  200 
					3 60  * 1   60
					4 60 * 1   60
					5 60  * 1  60
					->  1980
					1600/1980*180
flex-grow (扩展比例)
				剩余空间是正值的时，伸缩项目相对于伸缩容器里其他伸缩项目能分配到空间比例 
					若没写该属性，则为0，0代表不参与扩展

			flex缩写
			flex: none | [ <‘flex-grow’> <‘flex-shrink’>? || <‘flex-basis’> ]

/* align-items: flex-end; */ 给父级使用
				主轴对齐方式（水平）
				justify-content（水平对齐方式）
					flex-start 左对齐 
					flex-end 右对齐 
					center 居中对齐
					space-between 两端对齐(之间的间隔相等) 
					space-around 分散对齐
				侧轴对齐方式（垂直对齐方式）
				align-items给父级使用
					flex-start 起点对齐 
					flex-end 终点对齐 
					center 中间对齐 
					baseline 基线对齐 
					stretch 默认值(未设置高度或设为auto，将占满整个容器的高度)

				align-self （允许单个项目有与其他项目不一样的对齐方式）
					auto | flex-start | flex-end | center | baseline | stretch 该属性可能取6个值，除了auto，其他都与align-items属性完全一致。 
					可覆盖align-items属性 默认值auto，表示继承父级元素的align-items，如果没有父级，则则等同于stretch
					//--------------------------  弹性盒子   -----------------------------------
					父级元素加
					display:flex;
					flex-direction(子元素排列方向):		row 			横向从左到右排列（左对齐），默认的排列方式。
													row-reverse  	反转横向排列（右对齐，从后往前排，最后一项排在最前面。
													column 			纵向排列。
													column-reverse 	反转纵向排列，从后往前排，最后一项排在最上面。
													    
					flex-wrap(子元素超出宽度换行):		nowrap 默认值。规定灵活的项目不拆行或不拆列。 
													wrap 换行。 
													wrap-reverse 换行并翻转 
					justify-content(横向元素的间隔分配):	flex-start 默认值。项目位于容器的开头。 
													flex-end 项目位于容器的结尾。 
													center 项目位于容器的中心。 
													space-between 项目位于各行之间留有空白的容器内。 
													space-around 项目位于各行之前、之间、之后都留有空白的容器内。
														 
					align-items(子元素对齐方式)		stretch 默认值。项目被拉伸以适应容器。 
													center 项目位于容器的中心。
													flex-start 项目位于容器的开头。 
													flex-end 项目位于容器的结尾。 
													baseline 项目位于容器的基线上。
																							
					flex-flow(): 					wrap 规定灵活的项目在必要的时候拆行或拆列。 
													wrap-reverse 规定灵活的项目在必要的时候拆行或拆列，但是以相反的顺序。 
						
					子级元素	
					flex:							1 设置元素所占比例			
					order:							3 设置元素排列顺序，必须所有元素都设置顺序才起作用
											
					align-self(元素对齐方式)			stretch 默认值。项目被拉伸以适应容器。 
													center 项目位于容器的中心。
													flex-start 项目位于容器的开头。 
													flex-end 项目位于容器的结尾。 
													baseline 项目位于容器的基线上。
																	
					
					//--------------------------  内边距    -----------------------------------
					padding(内边距):					数值/30px	
					
					
					//--------------------------  外边距    -----------------------------------
					margin(外边距):					数值/30px	
					
					
					//--------------------------  边框    -----------------------------------			
					border(边框):						1px solid #fff;
					border-width(边框宽度):			1px 1px 1px 1px;可设置4个值，代表上下左右四个边
					border-style(边框样式): 			solid;
					border-color(边框颜色): 			red transparent(透明) blue black;可设置4个值，代表上下左右四个边
					border-radius(元素圆角):			20px 20px 20px 20px;可设置4个值，代表4个角的圆角大小
					注: 边框的四个边的连接点是呈45%的斜边
					
					
					//--------------------------  轮廓    -----------------------------------
					outline(轮廓,不是元素尺寸的一部分，因此元素的宽度和高度属性不包含轮廓的宽度。)							
					outline-width(轮廓宽度):			10px 					
					outline-style(轮廓样式):			none 默认。定义无轮廓。 
													dotted 定义点状的轮廓。 
													dashed 定义虚线轮廓。 
													solid 定义实线轮廓。 
													double 定义双线轮廓。双线的宽度等同于 outline-width 的值。 
													groove 定义 3D 凹槽轮廓。此效果取决于 outline-color 值。 
													ridge 定义 3D 凸槽轮廓。此效果取决于 outline-color 值。 
													inset 定义 3D 凹边轮廓。此效果取决于 outline-color 值。 
													outset 定义 3D 凸边轮廓。此效果取决于 outline-color 值。 											
					outline-color(轮廓颜色):			red  设置轮廓颜色为红色
					outline-offset(轮廓距离):			5px	
					
											
					//--------------------------  盒子阴影    -----------------------------------
					box-shadow(盒子阴影):				10px 	0px		10px	10px	red 	inset;
					可同时设置多个阴影,用","号分隔			横向偏移	纵向偏移	模糊距离	阴影大小	阴影颜色	内阴影
					
					
					//--------------------------  设置元素背景    -----------------------------------			
					background 						可以设置多个背景图片，通过","分隔
					background-color(背景颜色 )	:	red;			
					background-image(背景图像url):		url('smiley.gif');			
					background-position(图像位置):		left top      左上角
													left center   左边中间
													left bottom   左下角
													right top	     右上角
													right center  右边中间
													right bottom  右下角
													center top    中间顶部
													center center 居中
													center bottom 中间底部
													10% 20%
													10px 20px
																											
					background-size(图像的大小):		cover 此时会保持图像的纵横比并将图像缩放成将完全覆盖背景定位区域的最小大小。 
													contain 此时会保持图像的纵横比并将图像缩放成将适合背景定位区域的最大大小。 
													100% 100%;
													100px 100px;
													
					background-repeat(重复背景图像): 	repeat 背景图像将向垂直和水平方向重复。这是默认 
													repeat-x 只有水平位置会重复背景图像 
													repeat-y 只有垂直位置会重复背景图像 
													no-repeat background-image不会重复 
													
					background-origin(图像的定位区域):	padding-box 背景图像填充框的相对位置 
													border-box  背景图像边界框的相对位置 
													content-box 背景图像的相对位置的内容框 
																
					background-clip(图像的绘画区域): 	border-box 默认值。背景绘制在边框方框内（剪切成边框方框）。 
													padding-box 背景绘制在衬距方框内（剪切成衬距方框）。 
													content-box 背景绘制在内容方框内（剪切成内容方框）。 
					background-attachment(图像滚动): 	scroll 默认 ,背景图片随页面的其余部分滚动。
													fixed  背景图像是固定的 
													
													
					//--------------------------  元素溢出    -----------------------------------								
					overflow(元素溢出):				hidden		裁剪内容 - 不提供滚动机制。
													visible		不裁剪内容，可能会显示在内容框之外。
													scroll		裁剪内容 - 提供滚动机制。
													auto		如果溢出框，则应该提供滚动机制。
													no-display	如果内容不适合内容框，则删除整个框。
													no-content	如果内容不适合内容框，则隐藏整个内容。
													
													
					//--------------------------  文本溢出    -----------------------------------								
					text-overflow(文本溢出):			clip 		修剪文本。
													ellipsis 	显示省略符号来代表被修剪的文本。
													"<<<" 		使用给定的字符串来代表被修剪的文本。			
					
					
					//--------------------------  元素可见性    -----------------------------------					
					visibility(元素可见性):			hidden		元素是不可见的
													visible		 默认值。元素是可见的。
													collapse 	当在表格元素中使用时，此值可删除一行或一列。
					
									
					//--------------------------  透明度    -----------------------------------							
					opacity(元素透明度):				0.5 		元素的透明度为50%，取值( 0 — 1 )	
					
					
					//--------------------------  鼠标样式    -----------------------------------
					cursor(定义鼠标样式):			url			需使用的自定义光标的 URL。
													default 	默认光标(通常是一个箭头)
													auto 		默认。浏览器设置的光标。
													crosshair 	光标呈现为十字线。
													pointer 	光标呈现为指示链接的指针(一只手)
													move 		此光标指示某对象可被移动。
													e-resize 	此光标指示矩形框的边缘可被向右(东)移动。
													ne-resize 	此光标指示矩形框的边缘可被向上及向右移动(北/东)。
													nw-resize 	此光标指示矩形框的边缘可被向上及向左移动(北/西)。
													n-resize 	此光标指示矩形框的边缘可被向上(北)移动。
													se-resize 	此光标指示矩形框的边缘可被向下及向右移动(南/东)。
													sw-resize 	此光标指示矩形框的边缘可被向下及向左移动(南/西)。
													s-resize 	此光标指示矩形框的边缘可被向下移动(北/西)。
													w-resize 	此光标指示矩形框的边缘可被向左移动(西)。
													text 		此光标指示文本。
													wait 		此光标指示程序正忙(通常是一只表或沙漏)。
													help 		此光标指示可用的帮助(通常是一个问号或一个气球)。
					//--------------------------  过渡   -----------------------------------
					transition(过渡)
					transition-property(过度属性): 	all 所有属性都将获得过渡效果。 
													property 定义应用过渡效果的 CSS属性名称列表，列表以逗号分隔。 
					
					transition-duration(过度时长): 	5s;
					
					transition-timing-function: 	linear 规定以相同速度开始至结束的过渡效果。 
					(过渡的变化过程)					ease 规定慢速开始，然后变快，然后慢速结束的过渡。 
													ease-in 规定以慢速开始的过渡效果）。 
													ease-out 规定以慢速结束的过渡效果。 
													ease-in-out 规定以慢速开始和结束的过渡效果
													cubic-bezier(n,n,n,n)可能的值是 0 至 1 之间的数值。 0最快，1最慢
					transition-delay(过渡延迟):		0s;	
			伪类选择器的使用
			.mainmenu li a:after {
			    position: absolute;
			    right: 0;
			    bottom: 10px;
			    width: 0;
			    height: 3px;
			    content: "";
			    background-color: #C82C29;
			    z-index: -1;
			    -webkit-transition: .3s;
			    -o-transition: .3s;
			    transition: .3s;
			    border-radius: 5px;
			}
			
			
			
			https://cn.eslint.org/docs/rules/
			
			
			
	
			//自己滚动
			.hea {
			            line-height: 50px;
			            white-space: nowrap;
			            -webkit-overflow-scrolling: touch;
			            overflow-x: auto;
			            overflow-y: hidden;
			            padding: 0 0.1rem;
			            margin-bottom: -0.2rem;
			            overflow: -moz-scrollbars-none;
			            overflow: -moz-scrollbars-none;
			            background: #fff;
			        }
			
			        .hea::-webkit-scrollbar {
			            display: none;
			        }
			
	百度地图秘钥
	orU5tel1VRnZUOk3oaSylSkQyTkjSF5L